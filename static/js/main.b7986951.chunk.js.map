{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAoB,SA4BnB,IAAMC,EAAM,WACjB,MAAkCC,mBA5BT,IA4BzB,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAA1B,GAA4D,IAAzBL,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACtCI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,IAAK,MACH,OAAOQ,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,EACKI,EAAcM,UAGhBN,EAMcO,CAAiBjB,EAAiB,CACrDI,YACAE,cAYF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAlDF,QAmDbe,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WArDW,QAqDCjB,IAJhB,iCAUA,wBACEe,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,QA5BR,WACEZ,GAAa,SAAAe,GAAI,OAAKA,MA4BhBF,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAaf,IAJjB,sBAUEF,GAAaE,IAEb,wBACEa,QA7CV,WACEd,EApCuB,IAqCvBE,GAAa,IA4CLa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7986951.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ABC = 'abc';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_DEFAULT = '';\n\nfunction getPreparedGoods(goods, { sortField, isReverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case 'abc':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SORT_FIELD_DEFAULT);\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReverse,\n  });\n\n  function reset() {\n    setSortField(SORT_FIELD_DEFAULT);\n    setIsReverse(false);\n  }\n\n  function toggleReverse() {\n    setIsReverse(prev => !prev);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ABC)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ABC,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={toggleReverse}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse)\n        && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}